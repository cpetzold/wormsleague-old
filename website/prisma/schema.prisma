generator client {
  provider = "prisma-client-js"
}

generator nexusPrisma {
  provider = "nexus-prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id          String      @id @default(uuid())
  createdAt   DateTime    @default(now())
  username    String      @unique
  email       String      @unique
  password    String
  countryCode String?
  avatar      String?
  isAdmin     Boolean     @default(false)
  playedGames Player[]
  ranks       Rank[]
  rankStates  RankState[]
}

model Game {
  id         String      @id @default(uuid())
  createdAt  DateTime    @default(now())
  startedAt  DateTime
  duration   Int
  leagueId   String
  replayUrl  String
  logUrl     String
  replayHash String?
  league     League      @relation(fields: [leagueId], references: [id])
  players    Player[]
  rankStates RankState[]
}

model Player {
  createdAt   DateTime @default(now())
  userId      String
  leagueId    String
  gameId      String
  won         Boolean
  teamName    String
  teamColor   String
  turnCount   Int
  turnTime    Int
  retreatTime Int
  game        Game     @relation(fields: [gameId], references: [id])
  user        User     @relation(fields: [userId], references: [id])
  rank        Rank     @relation(fields: [userId, leagueId], references: [userId, leagueId])

  @@id([userId, gameId])
}

model League {
  id         String      @id @default(uuid())
  name       String
  games      Game[]
  ranks      Rank[]
  rankStates RankState[]
}

model Rank {
  userId           String
  leagueId         String
  rating           Decimal     @default(0)
  ratingDeviation  Decimal     @default(0)
  ratingVolatility Decimal     @default(0)
  wins             Int         @default(0)
  losses           Int         @default(0)
  league           League      @relation(fields: [leagueId], references: [id])
  user             User        @relation(fields: [userId], references: [id])
  playedGames      Player[]
  states           RankState[]

  @@id([userId, leagueId])
}

model RankState {
  userId           String
  leagueId         String
  gameId           String
  gameStartedAt    DateTime
  rating           Decimal  @default(0)
  ratingChange     Decimal  @default(0)
  ratingDeviation  Decimal  @default(0)
  ratingVolatility Decimal  @default(0)
  wins             Int      @default(0)
  losses           Int      @default(0)
  game             Game     @relation(fields: [gameId], references: [id])
  league           League   @relation(fields: [leagueId], references: [id])
  user             User     @relation(fields: [userId], references: [id])
  rank             Rank     @relation(fields: [userId, leagueId], references: [userId, leagueId])

  @@id([userId, gameId])
}
